# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

# 0. turn on power for all devices (to the USB hubs)
01 0	* * *	~/automation/poweron.sh
05 0	* * *	~/devicefarm-all-execute-adb-command.sh shell dumpsys battery | grep level
# 1. reboot to apply updates that may have been downloaded and installed
25 1	* * *   ~/devicefarm-all-without-oppo-execute-adb-command.sh reboot >/dev/null
# 2. unlock screen to fully start userspace after reboot (twice for good measure, as sometime unlock doesn't work)
45 1	* * *	~/automation/unlock-all-screens.sh >/dev/null 2>&1
50 1	* * *	~/automation/unlock-all-screens.sh >/dev/null 2>&1
# 3. check if we still see all devices (or if some failed to come back up)
20 2	* * *	~/automation/check-devices-connected.sh
# 4. check for new firmware release
50 2	* * *	~/automation/update-firmwareversion-to-database.sh
# 99. turn off power for all devices (to the USB hubs)
01 3	* * *	~/automation/poweroff.sh
